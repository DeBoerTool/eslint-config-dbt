const ERR = 'error'
const OFF = 'off'

const NEVER = 'never'
const ALWAYS = 'always'
const CONSISTENT = 'consistent'

module.exports = {
  extends: [
    'plugin:vue/recommended',
  ],

  plugins: [
    'html',
    'vue',
  ],

  parserOptions: {
    parser: 'babel-eslint',
    ecmaVersion: 6,
    sourceType: 'module',
  },

  env: {
    browser: true,
    node: true,
    jest: true,
  },

  rules: {
    // Vue

    'vue/component-tags-order': [ERR, {
      order: ['template', 'script', 'style'],
    }],
    'vue/order-in-components': [ERR, {
      'order': [
        // DBT
        'functional',
        ['props', 'propsData'],
        'computed',
        'methods',
        'watch',
        'LIFECYCLE_HOOKS',
        'data',
        ['components', 'directives', 'filters', 'mixins'],
        'name',

        // Vue Default
        'el',
        'parent',
        ['delimiters', 'comments'],
        'extends',
        'inheritAttrs',
        'model',
        'fetch',
        'asyncData',
        'head',
        ['template', 'render'],
        'renderError',
      ],
    }],
    'vue/script-indent': [ERR, 2, {
      baseIndent: 1,
      switchCase: 1,
      ignores: [],
    }],
    'vue/attributes-order': [ERR, {
      'order': [
        'EVENTS',
        'CONDITIONALS',
        'TWO_WAY_BINDING',
        'CONTENT',
        'OTHER_DIRECTIVES',
        'LIST_RENDERING',
        'RENDER_MODIFIERS',
        'UNIQUE',
        'DEFINITION',
        'OTHER_ATTR',
        'GLOBAL',
      ],
      'alphabetical': false,
    }],

    // Style

    'array-bracket-newline': [ERR, CONSISTENT],
    'array-bracket-spacing': [ERR, NEVER],
    'array-element-newline': [ERR, CONSISTENT],
    'block-spacing': [ERR, ALWAYS],
    'brace-style': [ERR, '1tbs'],
    'camelcase': ERR,
    'capitalized-comments': [ERR, ALWAYS, {
      ignoreConsecutiveComments: true,
    }],
    'comma-dangle': [ERR, 'always-multiline'],
    'comma-spacing': ERR,
    'comma-style': ERR,
    'computed-property-spacing': ERR,
    'consistent-this': [ERR, 'that'],
    'eol-last': [ERR, ALWAYS],
    'func-call-spacing': [ERR, NEVER],
    'func-name-matching': OFF,
    'func-names': [ERR, ALWAYS],
    'func-style': [ERR, 'expression'],
    'function-call-argument-newline': [ERR, CONSISTENT],
    'function-paren-newline': [ERR, CONSISTENT],
    'id-blacklist': [ERR, 'data', 'err', 'e', 'cb', 'callback'],
    'id-length': [ERR, {
      min: 2,
      max: 32,
    }],
    'id-match': OFF,
    'implicit-arrow-linebreak': [ERR, 'beside'],
    'indent': [ERR, 2],
    'jsx-quotes': OFF,
    'key-spacing': [ERR, {
      beforeColon: false,
      afterColon: true,
      mode: 'strict',
    }],
    'keyword-spacing': [ERR, {
      before: true,
      after: true,
    }],
    'line-comment-position': [ERR, 'above'],
    'linebreak-style': OFF,
    'lines-around-comment': [ERR, {
      beforeBlockComment: true,
      afterBlockComment: false,
      beforeLineComment: true,
      afterLineComment: false,
      allowBlockStart: true,
      allowBlockEnd: false,
      allowClassStart: true,
      allowClassEnd: false,
      allowObjectStart: true,
      allowObjectEnd: false,
      allowArrayStart: true,
      allowArrayEnd: false,
    }],
    'lines-between-class-members': [ERR, ALWAYS, {
      exceptAfterSingleLine: true,
    }],
    'max-depth': [ERR, 4],
    'max-len': [ERR, {
      code: 80,
      ignoreUrls: true,
      ignoreStrings: true,
    }],
    'max-lines': OFF,
    'max-lines-per-function': OFF,
    'max-nested-callbacks': [ERR, 5],
    'max-params': [ERR, 5],
    'max-statements': [ERR, 10],
    'max-statements-per-line': [ERR, {
      max: 1,
    }],
    'multiline-comment-style': [ERR, 'separate-lines'],
    'multiline-ternary': [ERR, ALWAYS],
    'new-cap': ERR,
    'new-parens': ERR,
    'newline-per-chained-call': [ERR, {
      ignoreChainWithDepth: 2,
    }],
    'no-array-constructor': ERR,
    'no-bitwise': ERR,
    'no-continue': ERR,
    'no-inline-comments': ERR,
    'no-lonely-if': ERR,
    'no-mixed-operators': ERR,
    'no-mixed-spaces-and-tabs': ERR,
    'no-multi-assign': ERR,
    'no-multiple-empty-lines': ERR,
    'no-negated-condition': ERR,
    'no-nested-ternary': ERR,
    'no-new-object': ERR,
    'no-plusplus': ERR,
    'no-tabs': ERR,
    'no-ternary': OFF,
    'no-trailing-spaces': [ERR, {
      skipBlankLines: true,
      ignoreComments: true,
    }],
    'no-underscore-dangle': ERR,
    'no-unneeded-ternary': ERR,
    'no-whitespace-before-property': ERR,

    // We disallow non-block statements altogether with the `curly` rule.
    'nonblock-statement-body-position': OFF,
    'object-curly-newline': [ERR, {
      [CONSISTENT]: true,
    }],
    'object-curly-spacing': [ERR, ALWAYS],
    'object-property-newline': [ERR, {
      allowAllPropertiesOnSameLine: true,
    }],
    'one-var': [ERR, NEVER],
    'one-var-declaration-per-line': OFF,
    'operator-assignment': [ERR, NEVER],
    'operator-linebreak': [ERR, 'before'],
    'padded-blocks': [ERR, NEVER],
    'padding-line-between-statements': OFF,
    'prefer-exponentiation-operator': ERR,
    'prefer-object-spread': ERR,
    'quote-props': [ERR, CONSISTENT],
    'quotes': [ERR, 'single'],
    'semi': [ERR, NEVER],
    'semi-spacing': OFF,
    'semi-style': OFF,
    'sort-keys': OFF,
    'sort-vars': OFF,
    'space-before-blocks': [ERR, ALWAYS],
    'space-before-function-paren': [ERR, ALWAYS],
    'space-in-parens': [ERR, NEVER],
    'space-infix-ops': ERR,
    'space-unary-ops': ERR,
    'spaced-comment': [ERR, ALWAYS],
    'switch-colon-spacing': [ERR, {
      after: true,
      before: false,
    }],
    'template-tag-spacing': [ERR, ALWAYS],
    'unicode-bom': OFF,
    'wrap-regex': ERR,

    // ES6

    'arrow-body-style': [ERR, 'as-needed'],
    'arrow-parens': [ERR, ALWAYS],
    'arrow-spacing': [ERR, {
      before: true,
      after: true,
    }],
    'constructor-super': ERR,
    'no-class-assign': ERR,
    'no-confusing-arrow': OFF,
    'no-const-assign': ERR,
    'no-dupe-class-members': ERR,
    'no-duplicate-imports': ERR,
    'no-this-before-super': ERR,
    'no-useless-computed-key': ERR,
    'no-useless-constructor': ERR,
    'no-useless-rename': ERR,
    'no-var': ERR,
    'object-shorthand': [ERR, ALWAYS],
    'prefer-arrow-callback': ERR,
    'prefer-const': ERR,
    'prefer-destructuring': ERR,
    'prefer-numeric-literals': ERR,
    'prefer-rest-params': ERR,
    'prefer-spread': ERR,
    'prefer-template': ERR,
    'rest-spread-spacing': [ERR, NEVER],
    'sort-imports': OFF,
    'template-curly-spacing': [ERR, NEVER],

    // Basics

    'for-direction': ERR,
    'getter-return': ERR,
    'no-compare-neg-zero': ERR,
    'no-cond-assign': [ERR, 'except-parens'],
    'no-constant-condition': ERR,
    'no-control-regex': ERR,
    'no-debugger': ERR,
    'no-dupe-args': ERR,
    'no-dupe-else-if': ERR,
    'no-dupe-keys': ERR,
    'no-duplicate-case': ERR,
    'no-empty': ERR,
    'no-empty-character-class': ERR,
    'no-ex-assign': ERR,
    'no-extra-parens': [ERR, 'all'],
    'no-extra-semi': ERR,
    'no-func-assign': ERR,
    'no-import-assign': ERR,
    'no-inner-declarations': ERR,
    'no-invalid-regexp': ERR,
    'no-irregular-whitespace': ERR,
    'no-misleading-character-class': ERR,
    'no-obj-calls': ERR,
    'no-prototype-builtins': ERR,
    'no-regex-spaces': ERR,
    'no-setter-return': ERR,
    'no-sparse-arrays': ERR,
    'no-template-curly-in-string': ERR,
    'no-unexpected-multiline': ERR,
    'no-unreachable': ERR,
    'no-unsafe-finally': ERR,
    'no-unsafe-negation': ERR,
    'require-atomic-updates': ERR,
    'use-isnan': ERR,
    'valid-typeof': ERR,

    // Best Practices

    'accessor-pairs': [ERR, {
      setWithoutGet: true,
      getWithoutSet: false,

      // EnforceForClassMembers: true,
    }],
    'array-callback-return': ERR,
    'block-scoped-var': ERR,
    'class-methods-use-this': OFF,
    'complexity': [ERR, 10],
    'consistent-return': [ERR, {
      treatUndefinedAsUnspecified: true,
    }],
    'curly': [ERR, 'all'],
    'default-case': ERR,

    // This won't be available until Eslint 7
    // 'default-case-last': ERR,
    'default-param-last': ERR,
    'dot-location': [ERR, 'property'],
    'dot-notation': [ERR, {
      allowKeywords: true,
      allowPattern: '^[a-z]+(_[a-z]+)+$',
    }],
    'eqeqeq': [ERR, 'always'],
    'grouped-accessor-pairs': ERR,
    'guard-for-in': ERR,
    'max-classes-per-file': [ERR, 1],
    'no-alert': ERR,
    'no-caller': ERR,
    'no-case-declarations': ERR,
    'no-constructor-return': ERR,
    'no-div-regex': ERR,
    'no-else-return': ERR,
    'no-empty-function': ERR,
    'no-empty-pattern': ERR,
    'no-eq-null': ERR,
    'no-eval': ERR,
    'no-extend-native': ERR,
    'no-extra-bind': ERR,
    'no-extra-label': ERR,
    'no-fallthrough': ERR,
    'no-floating-decimal': ERR,
    'no-global-assign': ERR,
    'no-implicit-coercion': OFF,
    'no-implicit-globals': ERR,
    'no-implied-eval': ERR,
    'no-invalid-this': ERR,
    'no-iterator': ERR,
    'no-labels': ERR,
    'no-lone-blocks': ERR,
    'no-loop-func': ERR,
    'no-magic-numbers': ERR,
    'no-multi-spaces': ERR,
    'no-multi-str': ERR,
    'no-new': ERR,
    'no-new-func': ERR,
    'no-octal': ERR,
    'no-octal-escape': ERR,
    'no-param-reassign': ERR,
    'no-proto': ERR,
    'no-redeclare': ERR,
    'no-restricted-properties': ERR,
    'no-return-assign': ERR,
    'no-return-await': ERR,
    'no-script-url': ERR,
    'no-self-assign': ERR,
    'no-self-compare': ERR,
    'no-sequences': ERR,
    'no-throw-literal': ERR,
    'no-unmodified-loop-condition': ERR,
    'no-unused-expressions': [ERR, {
      allowShortCircuit: true,
      allowTernary: true,
    }],
    'no-unused-labels': ERR,
    'no-useless-call': ERR,
    'no-useless-catch': ERR,
    'no-useless-concat': ERR,
    'no-useless-escape': ERR,
    'no-useless-return': ERR,
    'no-void': ERR,
    'no-warning-comments': ERR,
    'no-with': ERR,
    'prefer-named-capture-group': ERR,
    'prefer-promise-reject-errors': ERR,
    'prefer-regex-literals': ERR,
    'radix': ERR,
    'require-await': ERR,
    'require-unicode-regexp': ERR,
    'vars-on-top': ERR,
    'wrap-iife': ERR,
    'yoda': [ERR, NEVER],
  },

  overrides: [
    {
      files: [
        '*.vue',
      ],
      rules: {
        'indent': OFF,
        'id-blacklist': OFF,
      },
    },
  ],
}

